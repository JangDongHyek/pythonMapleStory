# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import time

from PyQt5 import QtCore, QtGui, QtWidgets

import games.disassemble
import games.auction
import games.hunt
import games.hunt_assist
import games.cctv
import globals
import db
import gml
import lib
import init

class Form(object):
    def updateSignal(self,bool,text):
        self.addLog(text)
        if bool :
            self.toggleBtn()

    def addLog(self,text):
        self.plainTextEdit.appendPlainText("{}  |  {}".format(text,lib.getTime()))

    def selectCharacter(self,name):
        if self.comboBox.count() != len(globals.characters) :
            self.comboBox.removeItem(0)

        dbu = db.DB()
        dict = {
            "name": name,
        }
        globals.character = dbu.dictSelect("characters",dict)

        self.addLog("{} 선택".format(globals.character['name']))

        # 스킬
        sql = "SELECT * FROM skills WHERE c_id = {} OR c_id = 0 ORDER BY cooldown desc".format(globals.character['_id'])
        globals.skills = dbu.orgSql(sql,True)

        self.tableWidget.clearContents()
        self.tableWidget.setRowCount(0)

        self.tableWidget.setColumnCount(2)
        self.tableWidget.setHorizontalHeaderLabels(['단축키','스킬'])

        for row_index, data_dict in enumerate(globals.skills):
            self.tableWidget.insertRow(row_index)  # 행 추가

            for col_index, (header, value) in enumerate(data_dict.items()):
                if header == "keycode" :
                    item = QtWidgets.QTableWidgetItem(str(value))
                    self.tableWidget.setItem(row_index,0, item)
                elif header == "memo" :
                    item = QtWidgets.QTableWidgetItem(str(value))
                    self.tableWidget.setItem(row_index, 1, item)
                continue

        gml.setSkills()

        #이동
        dict = {
            "type": globals.character['move']
        }
        globals.movings = dbu.dictSelect("moves", dict, "", True, "orders", "asc")

    def setupData(self):
        self.comboBox.addItem("----------------")

        for character in globals.characters :
            self.comboBox.addItem(character['name'])

        self.comboBox.activated[str].connect(self.selectCharacter)

    def toggleBtn(self):
        globals.main = not globals.main
        if globals.main :
            globals.windowMode = self.checkBox.isChecked()
            self.pushButton.setText("중지")
        else :
            self.pushButton.setText("시작")
            self.addLog("매크로 중지")


    def btnEvent(self):
        self.toggleBtn()

        if globals.main :
            if self.radioButton.isChecked():
                selected_value = "사냥"
                if(not globals.character) :
                    lib.alert("캐릭터를 선택해주세요")
                    self.toggleBtn()
                    return True
            elif self.radioButton_2.isChecked():
                selected_value = "분해"
            elif self.radioButton_3.isChecked():
                selected_value = "경매장"
            elif self.radioButton_4.isChecked():
                selected_value = "일퀘"
                if (not globals.character):
                    lib.alert("캐릭터를 선택해주세요")
                    self.toggleBtn()
                    return True
            elif self.radioButton_5.isChecked():
                selected_value = "채집"
                if (not globals.character):
                    lib.alert("캐릭터를 선택해주세요")
                    self.toggleBtn()
                    return True
            elif self.radioButton_6.isChecked():
                selected_value = "미정"
            else:
                selected_value = "모드를 선택해주세요."
                lib.alert(selected_value)
                self.toggleBtn()
                return True

            self.addLog(f"{selected_value}모드 시작합니다.")

            if selected_value == "사냥" :
                self.thread = games.hunt.Hunt()
                self.thread.update_signal.connect(self.updateSignal)
                self.thread.start()

                self.thread2 = games.hunt_assist.HuntAssist()
                self.thread2.update_signal.connect(self.updateSignal)
                self.thread2.start()

                self.thread3 = games.cctv.CCTV()
                self.thread3.update_signal.connect(self.updateSignal)
                self.thread3.start()

            elif selected_value == "분해" :
                # self.thread = test.gml()
                # self.thread.start()
                self.thread = games.disassemble.Disassemble()
                self.thread.update_signal.connect(self.updateSignal)
                self.thread.start()

            elif selected_value == "경매장" :
                self.thread = games.auction.Auction()
                self.thread.update_signal.connect(self.updateSignal)
                self.thread.start()

            elif selected_value == "일퀘" :
                print("일퀘")

            elif selected_value == "채집" :
                print("채집")


    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(667, 585)
        self.radioButton = QtWidgets.QRadioButton(Form)
        self.radioButton.setGeometry(QtCore.QRect(60, 30, 90, 16))
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(Form)
        self.radioButton_2.setGeometry(QtCore.QRect(60, 70, 90, 16))
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_3 = QtWidgets.QRadioButton(Form)
        self.radioButton_3.setGeometry(QtCore.QRect(170, 30, 90, 16))
        self.radioButton_3.setObjectName("radioButton_3")
        self.radioButton_4 = QtWidgets.QRadioButton(Form)
        self.radioButton_4.setGeometry(QtCore.QRect(170, 70, 90, 16))
        self.radioButton_4.setObjectName("radioButton_4")
        self.radioButton_5 = QtWidgets.QRadioButton(Form)
        self.radioButton_5.setGeometry(QtCore.QRect(260, 30, 90, 16))
        self.radioButton_5.setObjectName("radioButton_5")
        self.comboBox = QtWidgets.QComboBox(Form)
        self.comboBox.setGeometry(QtCore.QRect(60, 170, 261, 22))
        self.comboBox.setObjectName("comboBox")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(60, 140, 251, 16))
        self.label.setTextFormat(QtCore.Qt.PlainText)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(60, 220, 261, 51))
        self.pushButton.setObjectName("pushButton")
        self.radioButton_6 = QtWidgets.QRadioButton(Form)
        self.radioButton_6.setGeometry(QtCore.QRect(260, 70, 90, 21))
        self.radioButton_6.setObjectName("radioButton_6")
        self.tableWidget = QtWidgets.QTableWidget(Form)
        self.tableWidget.setGeometry(QtCore.QRect(380, 60, 256, 211))
        self.tableWidget.setObjectName("tableWidget")
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(470, 20, 71, 16))
        self.label_2.setObjectName("label_2")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(Form)
        self.plainTextEdit.setGeometry(QtCore.QRect(60, 330, 581, 221))
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.plainTextEdit.setReadOnly(True)
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(310, 300, 56, 12))
        self.label_3.setObjectName("label_3")
        self.checkBox = QtWidgets.QCheckBox(Form)
        self.checkBox.setGeometry(QtCore.QRect(60, 100, 81, 16))
        self.checkBox.setObjectName("checkBox")
        self.pushButton_2 = QtWidgets.QPushButton(Form)
        self.pushButton_2.setGeometry(QtCore.QRect(150, 100, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(Form)
        self.pushButton_3.setGeometry(QtCore.QRect(240, 100, 75, 23))
        self.pushButton_3.setObjectName("pushButton_3")

        self.pushButton.clicked.connect(self.btnEvent)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        #Init 기본값 셋팅
        init.Init()

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.radioButton.setText(_translate("Form", "사냥"))
        self.radioButton_2.setText(_translate("Form", "분해"))
        self.radioButton_3.setText(_translate("Form", "경매장"))
        self.radioButton_4.setText(_translate("Form", "일퀘"))
        self.radioButton_5.setText(_translate("Form", "채집"))
        self.label.setText(_translate("Form", "케릭터"))
        self.pushButton.setText(_translate("Form", "시작"))
        self.radioButton_6.setText(_translate("Form", "미정"))
        self.label_2.setText(_translate("Form", "등록된 스킬"))
        self.label_3.setText(_translate("Form", "로그"))
        self.checkBox.setText(_translate("Form", "창모드"))
        self.pushButton_2.setText(_translate("Form", "캐릭터 추가"))
        self.pushButton_3.setText(_translate("Form", "스킬 추가"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
